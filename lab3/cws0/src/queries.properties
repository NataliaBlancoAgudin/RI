# TINVOICES
TINVOICES_SELECT_LAST_NUMBER = SELECT MAX(number) FROM TInvoices
TINVOICES_INSERT = INSERT INTO TInvoices \
                   (id, number, date, vat, amount, state, version, \
                   createdAt, updatedAt, entityState) \
                   VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)

# TMECHANICS
TMECHANICS_ADD = insert into TMechanics(id, nif, name, surname, version, createdAt, updatedAt, entityState) \
					values (?, ?, ?, ?, ?, ?, ?, ?)
TMECHANICS_DELETE = delete from TMechanics where id = ?
TMECHANICS_FINDBYNIF = select id, nif, name, surname, version from TMechanics \
                       where nif = ?
TMECHANICS_FINDALL = select id, nif, name, surname, version from TMechanics
TMECHANICS_UPDATE = update TMechanics \
                    set name = ?, surname = ?, version = version+1, \
                    updatedat = ? where id = ?
TMECHANICS_FINDBYID = select * from TMechanics where id = ?

# TWORKORDERS
TWORKORDERS_FIND_NOT_INVOICED = select a.id, a.description, a.date, a.state, a.amount \
								from TWorkOrders as a, TVehicles as v, TClients as c \
								where a.vehicle_id = v.id \
								and v.client_id = c.id \
								and a.state = 'FINISHED' \
								and c.nif = ?

TWORKORDERS_UPDATE_VERSION = update TWorkOrders set version=version+1 where id = ?
TWORKORDERS_FIND_ID_BY_ID = SELECT id, amount, state FROM TWorkOrders WHERE id = ?
TWORKORDERS_FIND_STATUS_BY_ID = SELECT state FROM TWorkOrders WHERE id = ?
TWORKORDERS_FIND_AMOUNT_BY_ID = SELECT amount FROM TWorkOrders WHERE id = ?
TWORKORDERS_UPDATE_INVOICEID = UPDATE TWorkOrders SET invoice_id = ? WHERE id = ?
TWORKORDERS_UPDATE_STATE = UPDATE TWorkOrders SET state = 'INVOICED' WHERE id = ?
TWORKORDERS_UPDATE_TIMESTAMP = UPDATE TWorkOrders SET updatedAt = ? WHERE id = ?

TWORKORDERS_UPDATE = UPDATE TWorkOrders \
					 SET version=version+1, invoice_id = ?, state = 'INVOICED', updatedAt = ? \
					 WHERE id = ?
					 
TWORKORDERS_TOTAL_INVOICED_FOR_MECHANIC_IN_MONTH = SELECT COALESCE(SUM(w.amount), 0) AS total \
												   FROM TWorkOrders w \
												   JOIN TInterventions i ON w.id=i.workorder_id \
												   WHERE i.mechanic_id = ? \
												   AND w.state = 'INVOICED' \
												   AND w.date BETWEEN ? AND ?

TWORKORDER_BY_MECHANIC_ID = SELECT id FROM TWorkorders WHERE mechanic_id = ?

# TINTERVENTIONS (mio)
TINTERFVENTION_BY_MECHANIC_ID = SELECT id FROM TInterventions WHERE mechanic_id = ?

# TCONTRACTS (mios)
TCONTRACTS_BY_MECHANIC_ID = SELECT id FROM TContracts WHERE mechanic_id = ?
TCONTRACTS_BY_PROFESSIONALGROUP_NAME = SELECT id FROM TContracts WHERE professionalgroup_id = ?
TCONTRACTS_IN_MONTH = SELECT id FROM TContracts WHERE \
					  (state = 'TERMINATED' AND startDate <= ? AND (endDate IS NULL OR endDate >= ?)) \
					  OR state = 'IN_FORCE'
TCONTRACTS_FINDBYID = SELECT id, annualBaseSalary, createdAt, endDate, entityState, settlement, startDate \
					  state, taxRate, updatedAt, version, contractType_id, mechanic_id, professionalgroup_id \
					  FROM TContracts \
					  WHERE id = ?
TCONTRACTS_IN_FORCE = SELECT id, annualBaseSalary, createdAt, endDate, entityState, settlement, startDate, \
					  state, taxRate, updatedAt, version, contractType_id, mechanic_id, professionalgroup_id \
					  FROM TContracts \
					  WHERE state = 'IN_FORCE'

# TPROFESSIONALGROUPS
TPROFESSIONALGROUPS_FIND_BY_NAME = SELECT id, name, productivityRate, trienniumPayment, version \
								   FROM TProfessionalGroups \
								   WHERE name = ?
TPROFESSIONALGROUPS_ADD = INSERT INTO TPROFESSIONALGROUPS(id, name, productivityRate, trienniumPayment, version, \
						  createdAt, updatedAt, entityState) \
						  VALUES (?,?,?,?,?,?,?,?)
TPROFESSIONALGROUPS_FINDALL = SELECT id, name, productivityRate, trienniumPayment, version \
							  FROM TProfessionalGroups
TPROFESSIONALGROUPS_DELETE = DELETE FROM TProfessionalGroups WHERE id = ?
TPROFESSIONALGROUPS_UPDATE = UPDATE TProfessionalGroups \
                    		 set productivityRate = ?, trienniumPayment = ?, version = version + 1, updatedAt = ?\
                    		 where name = ?
TPROFESSIONALGROUPS_FINDBYID = SELECT id, createdAt, entityState, name, productivityRate, trienniumPayment, updatedAt, version \
							   FROM TProfessionalGroups \
							   WHERE id = ?
                    		 
# TPAYROLLS
TPAYROLLS_FIND_BY_DATE = SELECT id, baseSalary, createdAt, date, entityState, extraSalary, \
						 nicDeduction, productivityEarning, taxDeduction, trienniumEarning, \
						 updatedAt, version, contract_id \
						 FROM TPayrolls \
						 WHERE date >= ? AND date <= ?
TPAYROLLS_ADD = INSERT into TPayrolls(id, baseSalary, createdAt, date, entityState, extraSalary, \
				nicDeduction, productivityEarning, taxDeduction, trienniumEarning, updatedAt, version, contract_id) \
				values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
TPAYROLLS_DELETE = DELETE FROM TPayrolls WHERE id = ?
TPAYROLLS_FIND_OF_MECHANIC_BY_DATE = SELECT id, baseSalary, createdAt, date, entityState, extraSalary, \
						 			 nicDeduction, productivityEarning, taxDeduction, trienniumEarning, \
						 			 updatedAt, version, contract_id \
						 			 FROM TPayrolls p \
						 			 JOIN TContracts c ON p.contract_id = c.id \
						 			 WHERE c.mechanic_id=? \
						 			 AND date >= ? AND date <= ?
TPAYROLLS_FIND_BY_MECHANIC = SELECT id, baseSalary, createdAt, date, entityState, extraSalary, \
						 	 nicDeduction, productivityEarning, taxDeduction, trienniumEarning, \
						 	 updatedAt, version, contract_id \
						 	 FROM TPayrolls p \
						 	 JOIN TContracts c ON p.contract_id = c.id \
						 	 WHERE c.mechanic_id=?
TPAYROLLS_FIND_BY_PROFESSIONAL_GROUP = SELECT id, baseSalary, createdAt, date, entityState, extraSalary, \
						 	 		   nicDeduction, productivityEarning, taxDeduction, trienniumEarning, \
						 	 		   updatedAt, version, contract_id \
						 	 		   FROM TPayrolls p \
						 	 		   JOIN TContracts c ON p.contract_id = c.id \
						 	 		   JOIN TProfessionalGroups g ON c.professionalgroup_id = g.id \
						 	 		   WHERE g.name=?
TPAYROLLS_FINDBYID = SELECT id, baseSalary, createdAt, date, entityState, extraSalary, \
					 nicDeduction, productivityEarning, taxDeduction, trienniumEarning, \
					 updatedAt, version, contract_id \
					 FROM TPayrolls \
					 WHERE id = ?
TPAYROLLS_FINDALL = SELECT id, baseSalary, createdAt, date, entityState, extraSalary, \
					 nicDeduction, productivityEarning, taxDeduction, trienniumEarning, \
					 updatedAt, version, contract_id \
					 FROM TPayrolls
TPAYROLLS_COUNT_BY_CONTRACT = SELECT COUNT(*) FROM TPayrolls WHERE contract_id = ?